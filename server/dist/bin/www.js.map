{"version":3,"sources":["bin/www.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAuBA,IAAI,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;AACjC,IAAI,OAAO,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,CAAC,MAAM,CAAC;AAC1C,IAAI,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC/B,IAAI,MAAM,GAAG,OAAO,CAAC,qBAAqB,CAAC,CAAC;;AAE5C,IAAI,OAAO,CAAC,QAAQ,EAAE;AAClB,QAAG,CAAC,EAAE;;AAEF,aAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,EAAE,CAAC,EAAE,EAAE;AAC9B,mBAAO,CAAC,IAAI,EAAE,CAAC;SAClB;KACJ,MAAM;AACH,eAAO,CAAC,IAAI,EAAE,CAAC;KAClB;;AAED,WAAO,CAAC,EAAE,CAAC,MAAM,EAAE,UAAS,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE;AAC9C,YAAI,OAAO,GAAG,SAAS,GAAG,MAAM,CAAC,OAAO,CAAC,GAAG,GAAG,sCAAsC,CAAA;AACrF,cAAM,CAAC,GAAG,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;AACnC,eAAO,CAAC,IAAI,EAAE,CAAC;KAClB,CAAC,CAAC;CACN,MAAM;AACH,QAAI,gBAAgB,GAAG,OAAO,CAAC,iBAAiB,CAAC,CAAC,QAAQ,CAAC,gBAAgB,CAAC;AAC5E,QAAI,mBAAmB,GAAG,OAAO,CAAC,iBAAiB,CAAC,CAAC,QAAQ,CAAC,mBAAmB,CAAC;AAClF,QAAI,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC;QAC5B,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC;QACtB,MAAM,GAAG,OAAO,CAAC,iBAAiB,CAAC,CAAC;;AAExC,QAAI,GAAG,GAAG,OAAO,EAAE,CAAC;AACpB,OAAG,CAAC,GAAG,CAAC,MAAM,EAAE,OAAO,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC;;AAE1C,OAAG,CAAC,GAAG,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;AACvC,WAAO,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,CAAC,gBAAgB,EAAE,CAAC,CAAC,CAAC;;AAE7C,OAAG,CAAC,GAAG,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;;;;AAMxB,OAAG,CAAC,GAAG,CAAC,UAAS,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE;AAC7B,cAAM,CAAC,GAAG,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;KAChC,CAAC,CAAC;;AAGH,OAAG,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;;AAE7B,WAAO,CAAC,EAAE,CAAC,mBAAmB,EAAE,UAAS,GAAG,EAAE;AAC1C,wBAAgB,CAAC,GAAG,CAAC,CAAC;KACzB,CAAC,CAAC;;AAEH,WAAO,CAAC,EAAE,CAAC,mBAAmB,EAAE,UAAS,GAAG,EAAE;AAC1C,wBAAgB,CAAC,GAAG,CAAC,CAAC;KACzB,CAAC,CAAC;;AAIH,QAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,YAAU;AACrD,cAAM,CAAC,GAAG,CAAC,mCAAmC,GAAG,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC;KACrE,CAAC,CAAC;CACN","file":"bin/www.js","sourcesContent":["/**\n * Created by anatoliybondar on 8/31/15.\n */\n\n/**\n * @todo use this error handling:\n *\n * requestDomain.on('error', next);\n *\n * We can then use the default error handler to get a much nicer looking error page & stack trace:\n *\n * app.use(express.errorHandler({dumpExceptions: true, showStack: true}));\n *\n * http://www.asyncdev.net/2013/07/promises-errors-and-express-js/\n */\n\n/**\n * Открываем столько дебаггеров, сколько ядер, с соответствующими портами\n * slc debug src/bin/test-domains-www.js\n *\n * @type {*|exports}\n */\n\nvar cluster = require('cluster');\nvar numCPUs = require('os').cpus().length;\nvar colors = require('colors');\nvar logger = require(\"verbose-console-log\");\n\nif (cluster.isMaster) {\n    if(0) {\n        // Fork workers as much as CPUs on this machine\n        for (var i = 0; i < numCPUs; i++) {\n            cluster.fork();\n        }\n    } else {\n        cluster.fork();\n    }\n\n    cluster.on('exit', function(worker, code, signal) {\n        var message = 'Worker ' + worker.process.pid + ' died, will try start another one...'\n        logger.log(message.underline.cyan);\n        cluster.fork();\n    });\n} else {\n    var lastErrorHandler = require(\"../errors/index\").handlers.lastErrorHandler;\n    var expressErrorHandler = require(\"../errors/index\").handlers.expressErrorHandler;\n    var express = require('express'),\n        http = require('http'),\n        routes = require(\"../routes/index\");\n\n    var app = express();\n    app.set('port', process.env.PORT || 7777);\n\n    app.use(require('morgan')('combined'));\n    require('debug')('lol')('### booting %s', 9);\n\n    app.use(\"/api\", routes);\n\n\n\n    //app.use(express.logger('dev'));\n\n    app.use(function(req, res, next) {\n        logger.log(\"++++++++++\".red);\n    });\n\n\n    app.use(expressErrorHandler);\n\n    process.on('uncaughtException', function(err) {\n        lastErrorHandler(err);\n    });\n\n    process.on('uncaughtRejection', function(err) {\n        lastErrorHandler(err);\n    });\n\n\n\n    http.createServer(app).listen(app.get('port'), function(){\n        logger.log('Express server listening on port ' + app.get('port'));\n    });\n}"],"sourceRoot":"/source/"}