{"version":3,"sources":["bin/test-domains-www.js"],"names":[],"mappings":"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","file":"bin/test-domains-www.js","sourcesContent":["/**\n * Created by anatoliybondar on 8/31/15.\n */\n\n/**\n * Открываем столько дебаггеров, сколько ядер, с соответствующими портами\n * slc debug src/bin/test-domains-www.js\n *\n * @type {*|exports}\n */\n\nvar express = require('express'),\n    http = require('http'),\n    path = require('path'),\n    domain = require('domain'),\n    cluster = require('cluster'),\n    http = require('http'),\n    numCPUs = require('os').cpus().length,\n    fs = require('fs');\n\nif (cluster.isMaster) {\n    console.log(\"###\", numCPUs);\n\n    // fork workers\n    if(1) {\n        for (var i = 0; i < numCPUs; i++) {\n            cluster.fork();\n        }\n    } else {\n        cluster.fork();\n    }\n\n\n    // when a worker dies create a new one\n    cluster.on('exit', function(worker, code, signal) {\n        cluster.fork();\n    });\n\n} else {\n\n    var app = express();\n\n    //var favicon = require('serve-favicon');\n    //app.use(favicon(__dirname + '/public/favicon.ico'));\n\n    //domains\n    app.use(function domainMiddleware(req, res, next) {\n\n        var reqDomain = domain.create();\n\n        res.on('close', function () {\n            reqDomain.dispose();\n        });\n\n        res.on('finish', function () {\n            reqDomain.dispose();\n        });\n\n        reqDomain.on('error', function (err) {\n            // http://stackoverflow.com/questions/16763550/explicitly-adding-req-and-res-to-domain-dont-propagate-error-to-express-middlew\n            // delegate to express error-middleware\n            next(err);\n\n            reqDomain.dispose();\n        });\n\n        // Adding the request and response objects to the domain\n        // makes the express error-middleware to not being called.\n        reqDomain.add(req);\n        reqDomain.add(res);\n\n        reqDomain.run(next);\n    });\n\n    // all environments\n    app.set('port', process.env.PORT || 7777);\n    app.set('views', __dirname + '/views');\n    app.set('view engine', 'jade');\n    //app.use(express.favicon());\n    //app.use(express.logger('dev'));\n    //app.use(require('body-parser'));\n    //app.use(require('method-override'));\n    //app.use(app.router);\n    app.use(express.static(path.join(__dirname, 'public')));\n\n    // for testing which cluster that serves the request\n    var router = express.Router();\n    router.get('/', function(req, res, next) {\n        var debug = require(\"debug\")(\"app:main\");\n        debug(\"lol\");\n        res.status(200).json({ id: cluster.worker.id });\n    });\n    router.get('/error', function(req, res, next) {\n\n        // intentionally force an error\n        fs.readFile('', process.domain.intercept(function(data) {\n            // when using intercept we dont need this line anymore\n            //if (err) throw err;\n            res.send(data);\n        }));\n    });\n    app.use('/api', router);\n\n\n\n\n    app.use(function(err, req, res, next) {\n        console.log('ERROR MIDDLEWARE', err);\n        res.writeHeader(500, {'Content-Type' : \"text/html\"});\n        res.write(\"<h1>\" + err.name + \"</h1>\");\n        res.end(\"<p>\" + err.message + \"</p>\");\n    });\n\n    http.createServer(app).listen(app.get('port'), function(){\n        console.log('Express server listening on port ' + app.get('port'));\n    });\n}"],"sourceRoot":"/source/"}