{"version":3,"sources":["megaLogger.js"],"names":[],"mappings":"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","file":"megaLogger.js","sourcesContent":["/**\n * Created by anatoliybondar on 9/14/15.\n */\n\nvar fs = require('fs');\nvar path = require('path');\nvar SourceMapConsumer = require('source-map').SourceMapConsumer;\n\nObject.defineProperty(global, '__stack', {\n    get: function(){\n        var orig = Error.prepareStackTrace;\n        Error.prepareStackTrace = function(_, stack){ return stack; };\n        var err = new Error;\n        Error.captureStackTrace(err, arguments.callee);\n        var stack = err.stack;\n        Error.prepareStackTrace = orig;\n        return stack;\n    }\n});\n\nObject.defineProperty(global, '__line', {\n    get: function(){\n        var result = \"\";\n\n        //if(__stack && __stack.length) {\n        //    if(__stack[0]) {\n        //        result += \"|\" + __stack[0].getLineNumber();\n        //    }\n        //\n        //    if(__stack[1]) {\n        //        result += \"|\" + __stack[1].getLineNumber();\n        //    }\n        //\n        //    if(__stack[2]) {\n        //        result += \"|\" + __stack[2].getLineNumber();\n        //    }\n        //}\n\n        result = __stack[1].getLineNumber();\n\n        return result;\n    }\n});\n\nObject.defineProperty(global, '__file', {\n    get: function(){\n        var result = \"\";\n\n        result = __stack[1].getFileName()\n\n        return result;\n    }\n});\n\n//Object.defineProperty(global, '__line0', {get: function() {return (__stack && __stack[0])?__stack[0].getLineNumber():undefined;}});\n//Object.defineProperty(global, '__file0', {get: function() {return (__stack && __stack[0])?__stack[0].getFileName():undefined;}});\n//Object.defineProperty(global, '__line1', {get: function() {return (__stack && __stack[1])?__stack[1].getLineNumber():undefined;}});\n//Object.defineProperty(global, '__file1', {get: function() {return (__stack && __stack[1])?__stack[1].getFileName():undefined;}});\n//Object.defineProperty(global, '__line2', {get: function() {return (__stack && __stack[2])?__stack[2].getLineNumber():undefined;}});\n//Object.defineProperty(global, '__file2', {get: function() {return (__stack && __stack[2])?__stack[2].getFileName():undefined;}});\n//Object.defineProperty(global, '__line3', {get: function() {return (__stack && __stack[3])?__stack[3].getLineNumber():undefined;}});\n//Object.defineProperty(global, '__file3', {get: function() {return (__stack && __stack[3])?__stack[3].getFileName():undefined;}});\n\nObject.defineProperty(global, '__callsite0', {get: function() {return (__stack && __stack[0])?__stack[0]:null;}});\nObject.defineProperty(global, '__callsite1', {get: function() {return (__stack && __stack[1])?__stack[1]:null;}});\nObject.defineProperty(global, '__callsite2', {get: function() {return (__stack && __stack[2])?__stack[2]:null;}});\nObject.defineProperty(global, '__callsite3', {get: function() {return (__stack && __stack[3])?__stack[3]:null;}});\n\n\n\n//var logger = console;\nvar logger = {};\nlogger.log = function() {\n\n    var fileInfo = {};\n    var loggerArguments = Array.prototype.slice.call(arguments);\n\n    function isValidFileName(fileName) {\n        if(\n            !fileName\n            || (fileName && fileName.match(/v8-debug/))\n            || (fileName && fileName.match(/ConsoleAgent/))\n            || (fileName && fileName.match(/megaLogger/))\n        ) {\n            return false;\n        }\n\n        return true;\n    }\n\n    callsite = __callsite0;\n    //console.log(\"===0 \", callsite);\n\n\n    if(!isValidFileName(callsite.getFileName())) {\n        callsite = __callsite1;\n        //console.log(\"===1 \", callsite);\n        if(!isValidFileName(callsite.getFileName())) {\n            callsite = __callsite2;\n            //console.log(\"===2 \", callsite.getFileName()+\":\"+callsite.getLineNumber()+\":\"+callsite.getColumnNumber());\n            if(!isValidFileName(callsite.getFileName())) {\n                callsite = __callsite3;\n                //console.log(\"===3 \", callsite);\n                if(!isValidFileName(callsite.getFileName())) {\n                    console.error(\"There are no valid file!\");\n                    return false;\n                }\n            }\n        }\n    }\n\n    fileInfo = {\n        path: callsite.getFileName(),\n        mapPath: callsite.getFileName()+\".map\",\n        line: callsite.getLineNumber(),\n        column: callsite.getColumnNumber()\n    }\n\n    fs.readFile(fileInfo.mapPath, function (err, rawSourceMap) {\n        if (err) {\n            console.error(err);\n            return;\n        }\n\n        //console.log(\"#####\", rawSourceMap.toString('utf8', 0, rawSourceMap.length));\n        var smc = new SourceMapConsumer(rawSourceMap.toString('utf8', 0, rawSourceMap.length));\n        var originalPosition = smc.originalPositionFor({\n            line: fileInfo.line,\n            column: fileInfo.column\n        });\n\n        loggerArguments.unshift(originalPosition.source+\":\"+originalPosition.line+\":\"+originalPosition.column);\n\n\n        console.log.apply(this, loggerArguments);\n    });\n\n    // async\n    //path.exists(__file2+'.map', function(exists) {\n    //    if (exists) {\n    //        fs.readFile(filePath, {encoding: 'utf-8'}, function(err, rawSourceMap) {\n    //            if (err) {\n    //                console.error(err);\n    //                return false;\n    //            }\n    //\n    //            //var smc = new SourceMapConsumer(rawSourceMap);\n    //            //console.log(\"%%%\", smc.sources);\n    //        });\n    //    }\n    //});\n\n\n    //console.error(\"^^^\"+__file2+\":\"+__line2+\":\", message1, message2, message3);\n}\n\nmodule.exports = logger;"],"sourceRoot":"/source/"}