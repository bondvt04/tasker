{"version":3,"sources":["routes/index.js"],"names":[],"mappings":"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","file":"routes/index.js","sourcesContent":["var controller = require('../controllers/index');\nvar express = require('express');\nvar router = express.Router();\nvar logger = require('../logger');\n\n\nrouter.get('/', function(req, res, next) {\n\n    controller.doAction(\"index\", arguments);\n});\n\n// test, how works error handling\nrouter.get('/nodes/500', function(req, res, next) {\n    var controllerPromise = controller.doAction(\"error500\", arguments);\n});\n\n// get list of nodes\nrouter.get('/nodes', function(req, res, next) {\n\n    //logger.log(\"Hello, world!\");\n    //logger.error(\"Hello, world!!!\");\n\n        //var Promise = require(\"promise\");\n        //\n        ////throw new Error(\"asdfasdfasdf\");\n        //\n        //var controllerPromise = new Promise(function(resolve, reject) {\n        //    do_.something.wrong();\n        //    //throw new Error(\"lol there are error occured\");\n        //});\n        //\n        ////var controllerPromise = controller.doAction(\"lol\", arguments);\n        //controllerPromise.then(function(result) {\n        //    console.log(\"#################### not zlo\")\n        //}).catch(function(err) {\n        //    console.error(\"######\", err);\n        //    throw new Error(\"<<<<<<<< asdfasdfasdf >>>>>>>>\");\n        //    //throw err;\n        //    //next(err);\n        //});\n\n\n\n    //var controllerPromise = controller.doAction(\"getNodes\", arguments);\n    //controllerPromise.then(function(result) {\n    //    res.json(res.jsonToRender);\n    //    next();\n    //}).catch(function(err) {\n    //    console.err(err);\n    //    next(err);\n    //});\n});\n\n// get one node by id\n// @todo 400 if incorrect id, 404 if can't find resource\nrouter.get('/nodes/:id', function(req, res, next) {\n    var controllerPromise = controller.doAction(\"getOneNode\", arguments);\n    controllerPromise.then(function(result) {\n        res.json(res.jsonToRender);\n        //next();\n    }).catch(function(err) {\n        console.err(err);\n    });\n});\n\n// add new node\nrouter.post('/nodes/add', function(req, res, next) {\n    var controllerPromise = controller.doAction(\"addNode\", arguments);\n    controllerPromise.then(function(result) {\n        res.json(res.jsonToRender);\n        //next();\n    }).catch(function(err) {\n        console.err(err);\n    });\n});\n\n// update one node by id\nrouter.put('/nodes/:id', function(req, res, next) {\n    var controllerPromise = controller.doAction(\"updateNode\", arguments);\n    controllerPromise.then(function(result) {\n        res.json(res.jsonToRender);\n        //next();\n    }).catch(function(err) {\n        console.err(err);\n    });\n});\n\n// delete one node by id\nrouter.delete('/nodes/:id', function(req, res, next) {\n    var controllerPromise = controller.doAction(\"deleteNode\", arguments);\n    controllerPromise.then(function(result) {\n        res.json(res.jsonToRender);\n        //next();\n    }).catch(function(err) {\n        console.err(err);\n    });\n});\n\nmodule.exports = router;\n"],"sourceRoot":"/source/"}