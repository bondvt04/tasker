{"version":3,"sources":["controllers/apiControllerAbstract.js"],"names":[],"mappings":";;;;;;;;;;AAIA,IAAI,MAAM,GAAG,OAAO,CAAC,qBAAqB,CAAC,CAAC;;IAEtC,qBAAqB;;;;;;;;;;AASZ,aATT,qBAAqB,GAST;8BATZ,qBAAqB;;AAUnB,cAAM,CAAC,GAAG,CAAC,mCAAmC,CAAC,CAAC;KACnD;;iBAXC,qBAAqB;;eAaT,wBAAC,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE;AAC3B,mBAAO,IAAI,OAAO,CAAC,UAAS,OAAO,EAAE,MAAM,EAAE;AACzC,sBAAM,CAAC,GAAG,CAAC,2BAA2B,CAAC,CAAC;AACxC,uBAAO,EAAE,CAAC;aACb,CAAC,CAAC;;;;SAIN;;;eAEY,uBAAC,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,YAAY,EAAE;AACxC,mBAAO,IAAI,OAAO,CAAC,UAAS,OAAO,EAAE,MAAM,EAAE;AACzC,sBAAM,CAAC,GAAG,CAAC,0BAA0B,CAAC,CAAC;AACvC,uBAAO,EAAE,CAAC;aACb,CAAC,CAAC;;;;;;SAMN;;;;;;;;;;;eASO,kBAAC,UAAU,EAAE,IAAI,EAAE;AACvB,gBAAI,IAAI,GAAG,IAAI,CAAC;;AAEhB,gBAAI,YAAY,GAAG,GAAG,GAAC,UAAU,GAAC,QAAQ,CAAA;AAC1C,gBAAI,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;AAClB,gBAAI,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;AAClB,gBAAI,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;;AAEnB,qBAAS,UAAU,CAAC,GAAG,EAAE;AACrB,sBAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AAClB,sBAAM,CAAC,KAAK,CAAC,cAAc,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC;AACxC,oBAAI,CAAC,GAAG,CAAC,CAAC;aACb;;AAED,mBAAO,IAAI,OAAO,CAAC,UAAS,OAAO,EAAE,MAAM,EAAE;AACzC,oBAAI,CAAC,cAAc,EAAE,CAAC,IAAI,CAAC,UAAS,kBAAkB,EAAE;;AAEpD,wBAAI,CAAC,YAAY,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,UAAS,YAAY,EAAE;AACrD,4BAAI,CAAC,aAAa,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC,IAAI,CAAC,UAAS,iBAAiB,EAAE;AACpE,mCAAO,CAAC,iBAAiB,CAAC,CAAC;yBAC9B,CAAC,SAAM,CAAC,UAAU,CAAC,CAAC;qBACxB,CAAC,SAAM,CAAC,UAAU,CAAC,CAAC;iBACxB,CAAC,SAAM,CAAC,UAAU,CAAC,CAAC;aACxB,CAAC,CAAC;SACN;;;;;;;eAKY,uBAAC,YAAY,EAAE;AACxB,mBAAO,IAAI,OAAO,CAAC,UAAS,OAAO,EAAE,MAAM,EAAE;AACzC,uBAAO,CAAC,YAAY,CAAC,CAAC;aACzB,CAAC,CAAC;SACN;;;WA3EC,qBAAqB;;;AA8E3B,MAAM,CAAC,OAAO,GAAG,qBAAqB,CAAC","file":"controllers/apiControllerAbstract.js","sourcesContent":["/**\n * Created by anatoliybondar on 9/14/15.\n */\n\nvar logger = require(\"verbose-console-log\");\n\nclass ApiControllerAbstract {\n\n    /**\n     * @todo add \"isAbstract\" like this:\n     *\n     * if (new.target === ApiControllerAbstract) {\n     *     throw new TypeError(\"Cannot construct Abstract instances directly\");\n     * }\n     */\n    constructor() {\n        logger.log(\"ApiControllerAbstract.constructor\");\n    }\n\n    __beforeAction(req, res, next) {\n        return new Promise(function(resolve, reject) {\n            logger.log(\"Controller.__beforeAction\");\n            resolve();\n        });\n\n        // we will render it later if no error\n        //res.jsonToRender = {};\n    }\n\n    __afterAction(req, res, next, actionResult) {\n        return new Promise(function(resolve, reject) {\n            logger.log(\"Controller.__afterAction\");\n            resolve();\n        });\n\n        //return new Promise(function(resolve, reject) {\n        //    actionResult.c = \"csdf\";\n        //    resolve(actionResult);\n        //});\n    }\n\n    /**\n     * __beforeActionPromise -> actionPromise -> __afterActionPromise\n     *\n     * Args: [req, res, next]\n     *\n     * Old implementation: var actionPromise = self[functionName](...Array.prototype.slice.call(args))\n     */\n    doAction(actionName, args) {\n        var self = this;\n\n        var functionName = \"_\"+actionName+\"Action\"\n        var req = args[0];\n        var res = args[1];\n        var next = args[2];\n\n        function catchError(err) {\n            logger.error(err);\n            logger.error(\"Error stack:\", err.stack);\n            next(err);\n        }\n\n        return new Promise(function(resolve, reject) {\n            self.__beforeAction().then(function(beforeActionResult) {\n                // action must not know about \"beforeActionResult\" - only about \"args\"\n                self[functionName](req, res).then(function(actionResult) {\n                    self.__afterAction(actionResult, next).then(function(afterActionResult) {\n                        resolve(afterActionResult);\n                    }).catch(catchError);\n                }).catch(catchError);\n            }).catch(catchError);\n        });\n    }\n\n    /**\n     * @param actionResult - result from \"action\" promise\n     */\n    __afterAction(actionResult) {\n        return new Promise(function(resolve, reject) {\n            resolve(actionResult);\n        });\n    }\n}\n\nmodule.exports = ApiControllerAbstract;"],"sourceRoot":"/source/"}