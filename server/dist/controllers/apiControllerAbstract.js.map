{"version":3,"sources":["controllers/apiControllerAbstract.js"],"names":[],"mappings":";;;;;;;;;;AAIA,IAAI,MAAM,GAAG,OAAO,CAAC,qBAAqB,CAAC,CAAC;;IAEtC,qBAAqB;;;;;;;;;;AASZ,aATT,qBAAqB,GAST;8BATZ,qBAAqB;;AAUnB,cAAM,CAAC,GAAG,CAAC,mCAAmC,CAAC,CAAC;KACnD;;iBAXC,qBAAqB;;eAaT,wBAAC,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE;AAC3B,mBAAO,IAAI,OAAO,CAAC,UAAS,OAAO,EAAE,MAAM,EAAE;AACzC,uBAAO,CAAC,GAAG,CAAC,2BAA2B,CAAC,CAAC;AACzC,uBAAO,EAAE,CAAC;aACb,CAAC,CAAC;;;;SAIN;;;eAEY,uBAAC,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,YAAY,EAAE;AACxC,mBAAO,IAAI,OAAO,CAAC,UAAS,OAAO,EAAE,MAAM,EAAE;AACzC,uBAAO,CAAC,GAAG,CAAC,0BAA0B,CAAC,CAAC;AACxC,uBAAO,EAAE,CAAC;aACb,CAAC,CAAC;;;;;;SAMN;;;;;;;;;eAOO,kBAAC,UAAU,EAAE,IAAI,EAAE;AACvB,gBAAI,IAAI,GAAG,IAAI,CAAC;;AAEhB,gBAAI,mBAAmB,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;;AAEhD,mBAAO,mBAAmB,CAAC,IAAI,CAAC,UAAS,kBAAkB,EAAE;AACzD,oBAAI,aAAa,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;AACrC,6BAAa,CAAC,IAAI,CAAC,UAAS,YAAY,EAAE;AACtC,wBAAI,kBAAkB,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;AAC9C,sCAAkB,CAAC,IAAI,CAAC,UAAS,iBAAiB,EAAE,EAEnD,CAAC,SAAM,CAAC,UAAS,GAAG,EAAE;AACnB,8BAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;qBACrB,CAAC,CAAC;iBACN,CAAC,SAAM,CAAC,UAAS,GAAG,EAAE;AACnB,0BAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;iBACrB,CAAC,CAAC;aACN,CAAC,SAAM,CAAC,UAAS,GAAG,EAAE;AACnB,sBAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;aACrB,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;SAwCN;;;eAEQ,qBAAG;AACR,mBAAO,IAAI,OAAO,CAAC,UAAS,OAAO,EAAE,MAAM,EAAE;AACzC,uBAAO,CAAC,EAAC,CAAC,EAAC,MAAM,EAAE,CAAC,EAAC,MAAM,EAAC,CAAC,CAAC;aACjC,CAAC,CAAC;SACN;;;WAzGC,qBAAqB;;;AA4G3B,MAAM,CAAC,OAAO,GAAG,qBAAqB,CAAC","file":"controllers/apiControllerAbstract.js","sourcesContent":["/**\n * Created by anatoliybondar on 9/14/15.\n */\n\nvar logger = require(\"verbose-console-log\");\n\nclass ApiControllerAbstract {\n\n    /**\n     * @todo add \"isAbstract\" like this:\n     *\n     * if (new.target === ApiControllerAbstract) {\n     *     throw new TypeError(\"Cannot construct Abstract instances directly\");\n     * }\n     */\n    constructor() {\n        logger.log(\"ApiControllerAbstract.constructor\");\n    }\n\n    __beforeAction(req, res, next) {\n        return new Promise(function(resolve, reject) {\n            console.log(\"Controller.__beforeAction\");\n            resolve();\n        });\n\n        // we will render it later if no error\n        //res.jsonToRender = {};\n    }\n\n    __afterAction(req, res, next, actionResult) {\n        return new Promise(function(resolve, reject) {\n            console.log(\"Controller.__afterAction\");\n            resolve();\n        });\n\n        //return new Promise(function(resolve, reject) {\n        //    actionResult.c = \"csdf\";\n        //    resolve(actionResult);\n        //});\n    }\n\n    /**\n     * __beforeActionPromise -> actionPromise -> __afterActionPromise\n     *\n     * Args: [req, res, next]\n     */\n    doAction(actionName, args) {\n        var self = this;\n\n        var beforeActionPromise = self.__beforeAction();\n\n        return beforeActionPromise.then(function(beforeActionResult) {\n            var actionPromise = self.tttAction();\n            actionPromise.then(function(actionResult) {\n                var afterActionPromise = self.__afterAction();\n                afterActionPromise.then(function(afterActionResult) {\n\n                }).catch(function(err) {\n                    logger.error(err);\n                });\n            }).catch(function(err) {\n                logger.error(err);\n            });\n        }).catch(function(err) {\n            logger.error(err);\n        });\n\n        //var functionName = \"_\"+actionName+\"Action\";\n        //var self = this;\n        //var req = args[0];\n        //var res = args[1];\n        //var next = args[2];\n        //\n        //return new Promise(function(resolve, reject) {\n        //    if(self[functionName] && \"function\" === typeof self[functionName]) {\n        //        //self.__beforeAction(req, res, next);\n        //\n        //        // fill with arguments as is (not as array)\n        //        var actionPromise = self[functionName](...Array.prototype.slice.call(args));\n        //\n        //        function doAfterAction(actionResult) {\n        //            var afterActionPromise = self.__afterAction(req, res, next, actionResult);\n        //\n        //            afterActionPromise.then(function(result) {\n        //                resolve(result);\n        //            }).catch(function(err) {\n        //                logger.error(err);\n        //                reject(err);\n        //            });\n        //        }\n        //\n        //        actionPromise.then(function(result) {\n        //            logger.log(\"### 7\");\n        //            doAfterAction().then(function(afterActionResult) {\n        //                resolve(afterActionResult);\n        //            }).catch(function(err) {\n        //                reject(err);\n        //            });\n        //        }).catch(function(err) {\n        //            logger.log(\"### 8\");\n        //            doAfterAction();\n        //            reject(err);\n        //        });\n        //    }\n        //});\n    }\n\n    tttAction() {\n        return new Promise(function(resolve, reject) {\n            resolve({a:\"asdf\", b:\"bsdf\"});\n        });\n    }\n}\n\nmodule.exports = ApiControllerAbstract;"],"sourceRoot":"/source/"}