{"version":3,"sources":["controllers/index.js"],"names":[],"mappings":";;;;;;;;AAAA,IAAI,IAAI,GAAG,OAAO,CAAC,gBAAgB,CAAC,CAAC;;IAE/B,UAAU;aAAV,UAAU;8BAAV,UAAU;;;iBAAV,UAAU;;eAEE,0BAAG,EAEhB;;;eAEY,uBAAC,IAAI,EAAE;AAChB,gBAAI,EAAE,CAAC;SACV;;;eAEO,kBAAC,UAAU,EAAE,IAAI,EAAE;AACvB,gBAAI,YAAY,GAAG,GAAG,GAAC,UAAU,GAAC,QAAQ,CAAC;;AAE3C,gBAAG,IAAI,CAAC,YAAY,CAAC,IAAI,UAAU,KAAK,OAAO,IAAI,CAAC,YAAY,CAAC,EAAE;AAC/D,oBAAI,CAAC,cAAc,EAAE,CAAC;;;AAGtB,oBAAI,CAAC,YAAY,OAAC,CAAlB,IAAI,qBAAkB,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,EAAC,CAAC;AACxD,oBAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;aAC/B;SACJ;;;eAEW,sBAAC,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE;AACzB,gBAAI,KAAK,GAAG,IAAI,IAAI,CAAC;AACjB,uBAAO,EAAE,eAAe;aAC3B,CAAC,CAAC;;AAEH,iBAAK,CAAC,IAAI,CAAC,UAAU,GAAG,EAAE,IAAI,EAAE;AAC5B,oBAAI,GAAG,EAAE,OAAO,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;;AAEnC,uBAAO,CAAC,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;aACpC,CAAC,CAAC;;AAEH,gBAAI,CAAC,IAAI,CAAC,UAAU,GAAG,EAAE,KAAK,EAAE;AAC5B,oBAAI,GAAG,EAAE,OAAO,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AACnC,uBAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;aACtB,CAAC,CAAC;;;SAGN;;;WAvCC,UAAU;;;AA0ChB,MAAM,CAAC,OAAO,GAAG,IAAI,UAAU,EAAE,CAAC","file":"controllers/index.js","sourcesContent":["var Node = require(\"../models/Node\");\n\nclass Controller {\n\n    __beforeAction() {\n\n    }\n\n    __afterAction(next) {\n        next();\n    }\n\n    doAction(actionName, args) {\n        var functionName = \"_\"+actionName+\"Action\";\n\n        if(this[functionName] && \"function\" === typeof this[functionName]) {\n            this.__beforeAction();\n\n            // fill with arguments as is (not as array)\n            this[functionName](...Array.prototype.slice.call(args));\n            this.__afterAction(args[2]);\n        }\n    }\n\n    _indexAction(req, res, next) {\n        var hello = new Node({\n            content: 'Hello, World!'\n        });\n\n        hello.save(function (err, node) {\n            if (err) return console.error(err);\n\n            console.log(\"###\", node.content);\n        });\n\n        Node.find(function (err, nodes) {\n            if (err) return console.error(err);\n            console.log(nodes);\n        });\n\n        //Kitten.find({ name: /^Fluff/ }, callback);\n    }\n}\n\nmodule.exports = new Controller();\n"],"sourceRoot":"/source/"}