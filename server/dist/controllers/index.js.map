{"version":3,"sources":["controllers/index.js"],"names":[],"mappings":";;;;;;;;;;AAAA,IAAI,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC/B,IAAI,MAAM,GAAG,OAAO,CAAC,qBAAqB,CAAC,CAAC;AAC5C,IAAI,IAAI,GAAG,OAAO,CAAC,gBAAgB,CAAC,CAAC;AACrC,IAAI,qBAAqB,GAAG,OAAO,CAAC,yBAAyB,CAAC,CAAC;;IAEzD,UAAU;cAAV,UAAU;;AAED,aAFT,UAAU,GAEE;8BAFZ,UAAU;;AAGR,mCAHF,UAAU,6CAGF,SAAS,EAAE;KACpB;;;;;;;;;;;;;;;;;;;;;;;iBAJC,UAAU;;eA0BG,yBAAC,GAAG,EAAE,GAAG,EAAE;AACtB,kBAAM,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC;AACnC,mBAAO,IAAI,OAAO,CAAC,UAAS,OAAO,EAAE,MAAM,EAAE;AACzC,sBAAM,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC;AACnC,uBAAO,CAAC,EAAC,CAAC,EAAC,SAAS,EAAE,CAAC,EAAC,SAAS,EAAC,CAAC,CAAC;;;;;;;;;;;aAWvC,CAAC,CAAC;SACN;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;WA1CC,UAAU;GAAS,qBAAqB;;AAsG9C,IAAI;AACA,QAAI,UAAU,GAAG,IAAI,UAAU,EAAE,CAAC;CACrC,CAAC,OAAM,GAAG,EAAE;AACT,UAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;CACrB;;AAGD,MAAM,CAAC,OAAO,GAAG,UAAU,CAAC","file":"controllers/index.js","sourcesContent":["var colors = require('colors');\nvar logger = require(\"verbose-console-log\");\nvar Node = require(\"../models/Node\");\nvar ApiControllerAbstract = require(\"./apiControllerAbstract\");\n\nclass Controller extends ApiControllerAbstract {\n\n    constructor() {\n        super(arguments);\n    }\n\n    /**\n     * Тестим ловлю ошибок\n     */\n    //_error500Action(req, res) {\n    //    return new Promise(function(resolve, reject) {\n    //        try {\n    //            logger.log(\"_error500Action\");\n    //            lol.hello.ololo();\n    //            throw new Error(\"zlo\");\n    //        } catch(e) {\n    //            logger.log(\"### 1\");\n    //            reject(e);\n    //        }\n    //    });\n    //}\n\n    /**\n     * @todo Add filter, tags etc logic\n     * @todo do res.end() in the end, not in controller\n     */\n    _getNodesAction(req, res) {\n        logger.log(\"Controller.doAction1\");\n        return new Promise(function(resolve, reject) {\n            logger.log(\"Controller.doAction2\");\n            resolve({a:\"asdf777\", b:\"bsdf888\"});\n\n            //logger.log(\"###\", Node);\n\n            //Node.find(function (err, nodes) {\n            //    if (err) reject(err);\n            //\n            //    resolve(nodes);\n            //});\n\n            //Kitten.find({ name: /^Fluff/ }, callback);\n        });\n    }\n\n    //_addNodeAction(req, res) {\n    //    var newNode = new Node(req.body);\n    //\n    //    return new Promise(function(resolve, reject) {\n    //        newNode.save(function (err, node) {\n    //            if (err) reject(err);\n    //\n    //            logger.log(\"___savePromise\", node);\n    //            resolve(node);\n    //        });\n    //    });\n    //}\n\n    //_indexAction(req, res) {\n    //    return new Promise(function(resolve, reject) {\n    //        res.send(\"just /index action\");\n    //        resolve();\n    //    });\n    //}\n\n    //_testAction(req, res) {\n    //    var hello = new Node({\n    //        content: 'Hello, World!'\n    //    });\n    //\n    //    var savePromise = new Promise(function(resolve, reject) {\n    //        hello.save(function (err, node) {\n    //            if (err) reject(err);\n    //\n    //            logger.log(\"___savePromise\", node.content);\n    //            resolve(node);\n    //        });\n    //    });\n    //\n    //    var findPromise = new Promise(function(resolve, reject) {\n    //        Node.find(function (err, nodes) {\n    //            if (err) reject(err);\n    //\n    //            logger.log(\"___findPromise\", nodes);\n    //            resolve(nodes);\n    //        });\n    //\n    //        //Kitten.find({ name: /^Fluff/ }, callback);\n    //    });\n    //\n    //    return new Promise(function(resolve, reject) {\n    //        Promise.all([\n    //            savePromise,\n    //            findPromise\n    //        ]).then(function(results) {\n    //            resolve(results);\n    //        }).catch(function(err) {\n    //            reject();\n    //        });\n    //    });\n    //}\n}\n\ntry {\n    var controller = new Controller();\n} catch(err) {\n    logger.error(err);\n}\n\n\nmodule.exports = controller;\n"],"sourceRoot":"/source/"}