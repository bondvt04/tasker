{"version":3,"sources":["auth/index.js"],"names":[],"mappings":"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","file":"auth/index.js","sourcesContent":["var User  = require('../models/user');\nvar Channel  = require('../models/channel');\nvar jwt = require('jsonwebtoken');\nvar config = require('../../config');\n\nexports.authenticate = function(req, res) {\n    // find the user\n    User.findOne({\n        name: req.body.name\n    }, function(err, user) {\n        if (err) throw err;\n        if (!user) {\n            res.json({ success: false, message: 'Authentication failed. User not found.' });\n        } else if (user) {\n            // check if password matches\n            if (user.password != req.body.password) {\n                res.json({ success: false, message: 'Authentication failed. Wrong password.' });\n            } else {\n                // if user is found and password is right\n                // create a token\n                var token = jwt.sign(user, config.secret , {\n                    expiresInMinutes: 1440 // expires in 24 hours\n                });\n                // return the information including token as JSON\n                res.json({\n                    success: true,\n                    token: token\n                });\n            }\n        }\n    });\n};\n\nexports.register =  function(req, res) {\n    User.findOne({\n        name: req.body.name\n    }, function(err, user) {\n        if (err) throw err;\n        if (!user) {\n            var newUser = new User({\n                name: req.body.name,\n                password: req.body.password,\n                admin: true\n            });\n\n            //add default channel to new user\n            var channel = new Channel({\n                link: 'http://rss.cnn.com/rss/edition_world.rss',\n                name: 'edition_world',\n                userId: newUser._id\n            });\n\n            //save\n            newUser.save(function(err) {\n                if (err) throw err;\n                //save channel\n                channel.save(function(err) {\n                    if (err) throw err;\n                });\n                res.json({ success: true, message: 'User is created.' });\n            });\n        } else if (user) {\n            return res.json({ success: false , message: 'Failed. This is user already exist.' });\n        }\n    });\n};\n\n\nexports.me = function(req, res) {\n    res.json(req.decoded);\n};\n\nexports.home = function(req, res) {\n    res.send('Hello! There is rss api.' );\n}\n\nexports.isAuth = function(req, res, next) {\n    var token = req.body.token || req.query.token || req.headers['x-access-token']|| req.headers['authorization'];\n    // decode token\n    if (token) {\n        // verifies secret and checks exp\n        jwt.verify(token, config.secret, function(err, decoded) {\n            if (err) {\n                res.sendStatus(401);\n            } else {\n                // if everything is good, save to request for use in other routes\n                req.decoded = decoded;\n                next();\n            }\n        });\n    } else {\n        res.sendStatus(401);\n    }\n};"],"sourceRoot":"/source/"}