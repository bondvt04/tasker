{"version":3,"sources":["222verboseConsoleLog.js"],"names":[],"mappings":"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","file":"222verboseConsoleLog.js","sourcesContent":["/**\n * Created by anatoliybondar on 9/14/15.\n */\n\nvar fs = require('fs');\nvar path = require('path');\nvar SourceMapConsumer = require('source-map').SourceMapConsumer;\n\nlogger = {\n    log: function() {this.doAction({loggerArguments:arguments, action: \"log\"});},\n    error: function() {this.doAction({loggerArguments:arguments, action: \"error\"});},\n    warn: function() {this.doAction({loggerArguments:arguments, action: \"warn\"});},\n    debug: function() {this.doAction({loggerArguments:arguments, action: \"debug\"});},\n\n    doAction: function(options) {\n        var self = this;\n\n        try {\n            var originalArgumentsArr = Array.prototype.slice.call(options.loggerArguments);\n            var updatedArgumentsArr = originalArgumentsArr;\n        } catch(err) {\n            console.error(err);\n            return;\n        }\n\n        // Array of arguments with first argument as CallSite. For example if originalArgumentsArr = [\"foo\", \"bar\"]\n        // then updatedArgumentsArr = [\"/source/js/my_file.js:12:8\", \"foo\", \"bar\"]\n        //var updatedArgumentsArr = this.addCallSiteInfoToArguments(originalArgumentsArr);\n\n        function log(argumentsArr) {\n            try {\n                console[options.action].apply(self, argumentsArr);\n            } catch(err) {\n                console.error(err);\n                return;\n            }\n        }\n\n        var stack = this._getStack();\n\n        for(var i in stack) {\n            if(this._isValidFileName(stack[i].getFileName())) {\n                // is *.map (source map) file exists\n                fs.stat(stack[i].getFileName()+'.map', function(err, statObject) {\n                    if(err) {\n                        // *.map not exists, just do \"console.log\" stuff\n                        updatedArgumentsArr.unshift(stack[i].getFileName()+\":\"+stack[i].getLineNumber()+\":\"+stack[i].getColumnNumber());\n                        log(updatedArgumentsArr);\n                    } else {\n                        // there is *.map file, try to retrieve original \"fileName\" and \"lineNumber\"\n                        fs.readFile(stack[i].getFileName()+\".map\", function (err, rawSourceMap) {\n                            if (err) {\n                                console.error(err);\n                                return;\n                            }\n\n                            try {\n                                var smc = new SourceMapConsumer(rawSourceMap.toString('utf8', 0, rawSourceMap.length));\n                                var originalPosition = smc.originalPositionFor({\n                                    line: stack[i].getLineNumber(),\n                                    column: stack[i].getColumnNumber()\n                                });\n\n                                updatedArgumentsArr.unshift(originalPosition.source+\":\"+originalPosition.line+\":\"+originalPosition.column);\n                                log(updatedArgumentsArr);\n                            } catch(err) {\n                                console.error(err);\n                                return;\n                            }\n                        });\n                    }\n                });\n                return;\n            }\n        }\n    },\n\n    /**\n     * Check is fileName one of system files\n     */\n    _isValidFileName: function(fileName) {\n        if(\n            !fileName\n            || (fileName && fileName.match(/v8-debug/))\n            || (fileName && fileName.match(/ConsoleAgent/))\n            || (fileName && fileName.match(/verboseConsoleLog/))\n        ) {\n            return false;\n        }\n\n        return true;\n    },\n\n    _getStack: function () {\n        var orig = Error.prepareStackTrace;\n        Error.prepareStackTrace = function(_, stack){ return stack; };\n        var err = new Error;\n        Error.captureStackTrace(err, arguments.callee);\n        var stack = err.stack;\n        Error.prepareStackTrace = orig;\n        return stack;\n    }\n}\n\nmodule.exports = logger;"],"sourceRoot":"/source/"}